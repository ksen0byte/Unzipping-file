package com.javarush.task.task31.task3106;

import java.io.*;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import java.util.zip.ZipInputStream;

/*
Разархивируем файл
*/
public class Solution {
    public static void main(String[] args) throws IOException {
        File resultFileName = new File(args[0]);
        // for SequenceInputStream we need to have FIS`s
        List<FileInputStream> parts = Arrays.stream(args)
                .skip(1)
                .sorted()
                .map(filePart -> {
                    try {
                        return new FileInputStream(filePart);
                    } catch (FileNotFoundException e) {
                        e.printStackTrace();
                        return null;
                    }
                })
                .collect(Collectors.toList());

        SequenceInputStream sequenceInputStream = new SequenceInputStream(Collections.enumeration(parts));

        ZipInputStream zipInputStream = new ZipInputStream(sequenceInputStream);
        FileOutputStream fileOutputStream = new FileOutputStream(resultFileName);
        byte[] buf = new byte[1024 * 1024];

        while (zipInputStream.getNextEntry() != null) {
            int countBytes;
            while ((countBytes = zipInputStream.read(buf)) != -1) {
                fileOutputStream.write(buf, 0, countBytes);
            }
        }

        fileOutputStream.close();
        zipInputStream.close();
        sequenceInputStream.close();
    }
}
